<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <title>IRB 互动环境 | 一肩月光 · 笔记</title>
    <meta name="description" content="Live and learn.">
    <link rel="icon" href="https://www.wenboz.com/favicon.ico">
    
    <link rel="preload" href="/assets/css/0.styles.01e5cb2d.css" as="style"><link rel="preload" href="/assets/js/app.29852e53.js" as="script"><link rel="preload" href="/assets/js/2.8d5777ed.js" as="script"><link rel="preload" href="/assets/js/146.23a2efcc.js" as="script"><link rel="prefetch" href="/assets/js/10.3d170935.js"><link rel="prefetch" href="/assets/js/100.cf6be870.js"><link rel="prefetch" href="/assets/js/101.f24aea97.js"><link rel="prefetch" href="/assets/js/102.31c79c00.js"><link rel="prefetch" href="/assets/js/103.b562d739.js"><link rel="prefetch" href="/assets/js/104.217de120.js"><link rel="prefetch" href="/assets/js/105.48ac4a52.js"><link rel="prefetch" href="/assets/js/106.78eee37c.js"><link rel="prefetch" href="/assets/js/107.5ca1c2c9.js"><link rel="prefetch" href="/assets/js/108.56c7cb53.js"><link rel="prefetch" href="/assets/js/109.23d0703a.js"><link rel="prefetch" href="/assets/js/11.de194c9c.js"><link rel="prefetch" href="/assets/js/110.43a56e8a.js"><link rel="prefetch" href="/assets/js/111.6d850aee.js"><link rel="prefetch" href="/assets/js/112.a7124947.js"><link rel="prefetch" href="/assets/js/113.b9d4a2ed.js"><link rel="prefetch" href="/assets/js/114.02da1dc8.js"><link rel="prefetch" href="/assets/js/115.00085d8d.js"><link rel="prefetch" href="/assets/js/116.8cc02d90.js"><link rel="prefetch" href="/assets/js/117.5f39b110.js"><link rel="prefetch" href="/assets/js/118.58fdaa4b.js"><link rel="prefetch" href="/assets/js/119.961dc6e9.js"><link rel="prefetch" href="/assets/js/12.8d8e8a70.js"><link rel="prefetch" href="/assets/js/120.615b2371.js"><link rel="prefetch" href="/assets/js/121.dcd9bc40.js"><link rel="prefetch" href="/assets/js/122.8e95e757.js"><link rel="prefetch" href="/assets/js/123.76bb5240.js"><link rel="prefetch" href="/assets/js/124.0169a611.js"><link rel="prefetch" href="/assets/js/125.b29d09cd.js"><link rel="prefetch" href="/assets/js/126.d1e36116.js"><link rel="prefetch" href="/assets/js/127.7834b689.js"><link rel="prefetch" href="/assets/js/128.a077c373.js"><link rel="prefetch" href="/assets/js/129.6baae4de.js"><link rel="prefetch" href="/assets/js/13.358e64da.js"><link rel="prefetch" href="/assets/js/130.dc3395b0.js"><link rel="prefetch" href="/assets/js/131.f3462746.js"><link rel="prefetch" href="/assets/js/132.ddba49ff.js"><link rel="prefetch" href="/assets/js/133.6a762feb.js"><link rel="prefetch" href="/assets/js/134.0b09c36a.js"><link rel="prefetch" href="/assets/js/135.871ddc6b.js"><link rel="prefetch" href="/assets/js/136.5ea330f3.js"><link rel="prefetch" href="/assets/js/137.e60f1b81.js"><link rel="prefetch" href="/assets/js/138.a36f8582.js"><link rel="prefetch" href="/assets/js/139.e328821b.js"><link rel="prefetch" href="/assets/js/14.0361528f.js"><link rel="prefetch" href="/assets/js/140.8fd1d703.js"><link rel="prefetch" href="/assets/js/141.9e9e178e.js"><link rel="prefetch" href="/assets/js/142.1e369aa9.js"><link rel="prefetch" href="/assets/js/143.17e4307b.js"><link rel="prefetch" href="/assets/js/144.54ce4364.js"><link rel="prefetch" href="/assets/js/145.8e835378.js"><link rel="prefetch" href="/assets/js/147.d5350799.js"><link rel="prefetch" href="/assets/js/148.a21fd206.js"><link rel="prefetch" href="/assets/js/149.d87294c8.js"><link rel="prefetch" href="/assets/js/15.4b9181ea.js"><link rel="prefetch" href="/assets/js/150.4d1bfeea.js"><link rel="prefetch" href="/assets/js/151.690aa1d4.js"><link rel="prefetch" href="/assets/js/152.8a1989e9.js"><link rel="prefetch" href="/assets/js/153.cd16e7e8.js"><link rel="prefetch" href="/assets/js/154.42e50219.js"><link rel="prefetch" href="/assets/js/155.6f84430e.js"><link rel="prefetch" href="/assets/js/156.e8c8dfc2.js"><link rel="prefetch" href="/assets/js/157.c0c08787.js"><link rel="prefetch" href="/assets/js/158.af4973e4.js"><link rel="prefetch" href="/assets/js/159.0c6b1f81.js"><link rel="prefetch" href="/assets/js/16.ba786a33.js"><link rel="prefetch" href="/assets/js/160.cd5d3515.js"><link rel="prefetch" href="/assets/js/161.5d428ddf.js"><link rel="prefetch" href="/assets/js/162.48b20f6e.js"><link rel="prefetch" href="/assets/js/163.643f46a9.js"><link rel="prefetch" href="/assets/js/164.265cd9a1.js"><link rel="prefetch" href="/assets/js/165.220d40ad.js"><link rel="prefetch" href="/assets/js/166.544a3aba.js"><link rel="prefetch" href="/assets/js/167.249ef5d6.js"><link rel="prefetch" href="/assets/js/168.8a8c7f1e.js"><link rel="prefetch" href="/assets/js/169.09f34fd0.js"><link rel="prefetch" href="/assets/js/17.e0e6ce39.js"><link rel="prefetch" href="/assets/js/170.71daf1c3.js"><link rel="prefetch" href="/assets/js/171.56b9052c.js"><link rel="prefetch" href="/assets/js/172.6bda7de9.js"><link rel="prefetch" href="/assets/js/173.fb353efb.js"><link rel="prefetch" href="/assets/js/174.e49b148a.js"><link rel="prefetch" href="/assets/js/175.b32cbf33.js"><link rel="prefetch" href="/assets/js/176.9535760d.js"><link rel="prefetch" href="/assets/js/177.06ec2aae.js"><link rel="prefetch" href="/assets/js/178.f7fb7d0a.js"><link rel="prefetch" href="/assets/js/18.c91eb81e.js"><link rel="prefetch" href="/assets/js/19.771957dd.js"><link rel="prefetch" href="/assets/js/20.1ba6d392.js"><link rel="prefetch" href="/assets/js/21.15bad6c1.js"><link rel="prefetch" href="/assets/js/22.5f72b5ae.js"><link rel="prefetch" href="/assets/js/23.2ec78ee1.js"><link rel="prefetch" href="/assets/js/24.30c2db8f.js"><link rel="prefetch" href="/assets/js/25.24ddb5a3.js"><link rel="prefetch" href="/assets/js/26.69c62149.js"><link rel="prefetch" href="/assets/js/27.28094caf.js"><link rel="prefetch" href="/assets/js/28.07b404fd.js"><link rel="prefetch" href="/assets/js/29.40a8559c.js"><link rel="prefetch" href="/assets/js/3.8f7b7d73.js"><link rel="prefetch" href="/assets/js/30.13d8c9a6.js"><link rel="prefetch" href="/assets/js/31.274c5049.js"><link rel="prefetch" href="/assets/js/32.3ee1a2fb.js"><link rel="prefetch" href="/assets/js/33.90eb502e.js"><link rel="prefetch" href="/assets/js/34.83f9260d.js"><link rel="prefetch" href="/assets/js/35.66468216.js"><link rel="prefetch" href="/assets/js/36.2b64167c.js"><link rel="prefetch" href="/assets/js/37.d7d359c7.js"><link rel="prefetch" href="/assets/js/38.0656ba0b.js"><link rel="prefetch" href="/assets/js/39.5024d635.js"><link rel="prefetch" href="/assets/js/4.023e7e01.js"><link rel="prefetch" href="/assets/js/40.e0a0d7d0.js"><link rel="prefetch" href="/assets/js/41.2fc52858.js"><link rel="prefetch" href="/assets/js/42.a6b2d68e.js"><link rel="prefetch" href="/assets/js/43.9f9b90f7.js"><link rel="prefetch" href="/assets/js/44.4155d825.js"><link rel="prefetch" href="/assets/js/45.b0d45e78.js"><link rel="prefetch" href="/assets/js/46.7cc82a9b.js"><link rel="prefetch" href="/assets/js/47.1c4277f1.js"><link rel="prefetch" href="/assets/js/48.26d6ddd0.js"><link rel="prefetch" href="/assets/js/49.d5752f70.js"><link rel="prefetch" href="/assets/js/5.994c5cd3.js"><link rel="prefetch" href="/assets/js/50.2b579daa.js"><link rel="prefetch" href="/assets/js/51.4a9cdee4.js"><link rel="prefetch" href="/assets/js/52.20f6d55e.js"><link rel="prefetch" href="/assets/js/53.876610bc.js"><link rel="prefetch" href="/assets/js/54.b8c21ee3.js"><link rel="prefetch" href="/assets/js/55.5ddce8f3.js"><link rel="prefetch" href="/assets/js/56.a63e6b48.js"><link rel="prefetch" href="/assets/js/57.fe5ea769.js"><link rel="prefetch" href="/assets/js/58.687e9d31.js"><link rel="prefetch" href="/assets/js/59.51ccf3af.js"><link rel="prefetch" href="/assets/js/6.6ca7e186.js"><link rel="prefetch" href="/assets/js/60.533dc1a5.js"><link rel="prefetch" href="/assets/js/61.758f4ad8.js"><link rel="prefetch" href="/assets/js/62.6de7a31d.js"><link rel="prefetch" href="/assets/js/63.f096c285.js"><link rel="prefetch" href="/assets/js/64.3ec1c915.js"><link rel="prefetch" href="/assets/js/65.b337818d.js"><link rel="prefetch" href="/assets/js/66.9756c4ea.js"><link rel="prefetch" href="/assets/js/67.ca9669a9.js"><link rel="prefetch" href="/assets/js/68.71881837.js"><link rel="prefetch" href="/assets/js/69.2b03fca0.js"><link rel="prefetch" href="/assets/js/7.91f62f9b.js"><link rel="prefetch" href="/assets/js/70.0fd5276e.js"><link rel="prefetch" href="/assets/js/71.6e696779.js"><link rel="prefetch" href="/assets/js/72.1217481b.js"><link rel="prefetch" href="/assets/js/73.879e1e4b.js"><link rel="prefetch" href="/assets/js/74.7210200e.js"><link rel="prefetch" href="/assets/js/75.a02af934.js"><link rel="prefetch" href="/assets/js/76.42668e54.js"><link rel="prefetch" href="/assets/js/77.41a4fdea.js"><link rel="prefetch" href="/assets/js/78.18623347.js"><link rel="prefetch" href="/assets/js/79.ccdbcda8.js"><link rel="prefetch" href="/assets/js/8.9f50e576.js"><link rel="prefetch" href="/assets/js/80.caee5323.js"><link rel="prefetch" href="/assets/js/81.20df84da.js"><link rel="prefetch" href="/assets/js/82.883b8be9.js"><link rel="prefetch" href="/assets/js/83.e0fdb9b3.js"><link rel="prefetch" href="/assets/js/84.d54094e3.js"><link rel="prefetch" href="/assets/js/85.7efb979a.js"><link rel="prefetch" href="/assets/js/86.c3bf66fb.js"><link rel="prefetch" href="/assets/js/87.696a816d.js"><link rel="prefetch" href="/assets/js/88.73692266.js"><link rel="prefetch" href="/assets/js/89.8da1d9d1.js"><link rel="prefetch" href="/assets/js/9.bc3c6f0b.js"><link rel="prefetch" href="/assets/js/90.a7b9d335.js"><link rel="prefetch" href="/assets/js/91.feaf351d.js"><link rel="prefetch" href="/assets/js/92.2c2347ee.js"><link rel="prefetch" href="/assets/js/93.e6cd8c6d.js"><link rel="prefetch" href="/assets/js/94.2f63cfd1.js"><link rel="prefetch" href="/assets/js/95.fc94aecc.js"><link rel="prefetch" href="/assets/js/96.024ae220.js"><link rel="prefetch" href="/assets/js/97.75aa60fb.js"><link rel="prefetch" href="/assets/js/98.39886c73.js"><link rel="prefetch" href="/assets/js/99.e29d6467.js">
    <link rel="stylesheet" href="/assets/css/0.styles.01e5cb2d.css">
  </head>
  <body>
    <div id="app" data-server-rendered="true"><div class="theme-container"><header class="navbar"><div class="sidebar-button"><svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" role="img" viewBox="0 0 448 512" class="icon"><path fill="currentColor" d="M436 124H12c-6.627 0-12-5.373-12-12V80c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12zm0 160H12c-6.627 0-12-5.373-12-12v-32c0-6.627 5.373-12 12-12h424c6.627 0 12 5.373 12 12v32c0 6.627-5.373 12-12 12z"></path></svg></div> <a href="/" class="home-link router-link-active"><!----> <span class="site-name">一肩月光 · 笔记</span></a> <div class="links"><div class="search-box"><input aria-label="Search" autocomplete="off" spellcheck="false" value=""> <!----></div> <nav class="nav-links can-hide"><div class="nav-item"><a href="/js/" class="nav-link">JS</a></div><div class="nav-item"><a href="/css/" class="nav-link">CSS</a></div><div class="nav-item"><a href="/react/" class="nav-link">React</a></div><div class="nav-item"><a href="/rails/" class="nav-link router-link-active">Rails</a></div><div class="nav-item"><a href="https://www.wenboz.com" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Blog
  <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="nav-item"><a href="https://github.com/boboidream/note" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Github
  <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div> <!----></nav></div></header> <div class="sidebar-mask"></div> <aside class="sidebar"><nav class="nav-links"><div class="nav-item"><a href="/js/" class="nav-link">JS</a></div><div class="nav-item"><a href="/css/" class="nav-link">CSS</a></div><div class="nav-item"><a href="/react/" class="nav-link">React</a></div><div class="nav-item"><a href="/rails/" class="nav-link router-link-active">Rails</a></div><div class="nav-item"><a href="https://www.wenboz.com" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Blog
  <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div><div class="nav-item"><a href="https://github.com/boboidream/note" target="_blank" rel="noopener noreferrer" class="nav-link external">
  Github
  <svg xmlns="http://www.w3.org/2000/svg" aria-hidden="true" x="0px" y="0px" viewBox="0 0 100 100" width="15" height="15" class="icon outbound"><path fill="currentColor" d="M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"></path> <polygon fill="currentColor" points="45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"></polygon></svg></a></div> <!----></nav>  <ul class="sidebar-links"><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading open"><span>知识储备</span> <span class="arrow down"></span></p> <ul class="sidebar-links sidebar-group-items"><li><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chu.html" class="sidebar-link">Ruby 基础知识</a></li><li><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html" class="active sidebar-link">IRB 互动环境</a><ul class="sidebar-sub-headers"><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#irb-互动环境" class="sidebar-link">IRB 互动环境</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#字符类型" class="sidebar-link">字符类型</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#流程控制" class="sidebar-link">流程控制</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#对象导向" class="sidebar-link">对象导向</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#方法的封装" class="sidebar-link">方法的封装</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#class-继承" class="sidebar-link">Class 继承</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#module" class="sidebar-link">Module</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#iterator-迭代器" class="sidebar-link">Iterator 迭代器</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#yield" class="sidebar-link">Yield</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#例外处理" class="sidebar-link">例外处理</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#introspection-反射机制" class="sidebar-link">Introspection 反射机制</a></li><li class="sidebar-sub-header"><a href="/rails/zhi-shi-chu-bei/ruby-yu-yan-ji-chuhtml.html#常见惯例" class="sidebar-link">常见惯例</a></li></ul></li><li><a href="/rails/zhi-shi-chu-bei/xue-xi-li-cheng.html" class="sidebar-link">学习历程</a></li><li><a href="/rails/zhi-shi-chu-bei/zhi-shi-chu-bei.html" class="sidebar-link">学习资料</a></li><li><a href="/rails/zhi-shi-chu-bei/zi-liao-qing-dan.html" class="sidebar-link">学习资料</a></li></ul></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>环境构建</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>DD测试驱动</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Oute路由</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Ata Base数据库</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>VC交互</span> <span class="arrow right"></span></p> <!----></section></li><li><section class="sidebar-group collapsable depth-0"><p class="sidebar-heading"><span>Ails语法</span> <span class="arrow right"></span></p> <!----></section></li></ul> </aside> <main class="page"> <div class="theme-default-content content__default"><h2 id="irb-互动环境"><a href="#irb-互动环境" aria-hidden="true" class="header-anchor">#</a> IRB 互动环境</h2> <div class="language- extra-class"><pre class="language-text"><code>$ irb
</code></pre></div><p>Ruby是個動態強分型的直譯式程式語言</p> <h2 id="字符类型"><a href="#字符类型" aria-hidden="true" class="header-anchor">#</a> 字符类型</h2> <ul><li><p>整数 Integer ,任何整数都是 <code>Fixnum</code> 对象。运算结果为整数</p></li> <li><p>浮点数 <code>Float</code> 对象</p></li> <li><p><code>String</code>对象 单双引号括起来，字串不能直接跟數字相加，會發生例外錯誤</p></li></ul> <div class="language- extra-class"><pre class="language-text"><code>

var1 = 'stop'
var2 = 'foobar'
var3 = &quot;aAbBcC&quot;

puts var1.reverse # pots
puts var2.length # 6
puts var3.upcase # AABBCC
puts var3.downcase # aabbcc

# 内插模式
verb = 'work'
where = 'office'

# 双引号字符串
puts &quot;I #{verb} at the #{where}&quot; # 輸出 I work at the office
</code></pre></div><ul><li>类型转换</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 相加前需要手动转换

to_s(轉成字串)

to_i(轉成整數)

to_f(轉成浮點數)

</code></pre></div><ul><li>区域变量</li></ul> <p>區域變數使用小寫開頭，偏好單字之間以底線_來分隔。範例如下：</p> <div class="language- extra-class"><pre class="language-text"><code>

composer = 'Mozart'
puts composer + ' was &quot;da bomb&quot;, in his day.'

my_composer = 'Beethoven'
puts 'But I prefer ' + my_composer + ', personally.'
</code></pre></div><ul><li>Constant 常数</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 大寫開頭的是為常數

Foo = 1
Foo = 2 # (irb):3: warning: already initialized constant Foo

RUBY_PLATFORM # =&gt; &quot;x86_64-darwin10.7.0&quot;
ENV # =&gt; { &quot;PATH&quot; =&gt; &quot;....&quot;, &quot;LC_ALL&quot; =&gt; &quot;zh_TW.UTF-8&quot; }
</code></pre></div><ul><li>空值 nil</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 表示未設定值、未定義的狀態：


nil # nil
nil.class # NilClass

nil.nil? # true
42.nil? # false

nil == nil # true
false == nil # false
</code></pre></div><ul><li><p>Ruby偏好一律使用單行註解：</p></li> <li><p>Symbols 字串符號</p></li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 是唯一且不會變動的識別名稱，用冒號開頭.

# 相同名稱的Symbol不會再重複建構物件，所以使用Symbol可以執行的更有效率。


:this_is_a_symbol
相同名稱的Symbol不會再重複建構物件，所以使用Symbol可以執行的更有效率。


puts &quot;foobar&quot;.object_id      # 輸出 2151854740
puts &quot;foobar&quot;.object_id      # 輸出 2151830100
</code></pre></div><ul><li>Array 数组</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 可放任意类型
a = [ 1, &quot;cat&quot;, 3.14 ]

puts a[0] # 輸出 1
puts a.size # 輸出 3
# inspect方法會將物件轉成適合給人看的字串
puts a.inspect # 輸出 [1, &quot;cat&quot;, nil]

colors = [&quot;red&quot;, &quot;blue&quot;]

colors.push(&quot;black&quot;)
colors &lt;&lt; &quot;white&quot;
puts colors.join(&quot;, &quot;) # red, blue, black, white

colors.pop
puts colors.last #black
</code></pre></div><div class="language- extra-class"><pre class="language-text"><code>
languages = ['Ruby', 'Javascript', 'Perl']

languages.each do |lang|
  puts 'I love ' + lang + '!'
end

# I Love Ruby!
# I Love Javascript!
# I Love Perl!
</code></pre></div><ul><li>Hash</li></ul> <p>Hash是一種鍵值對(Key-Value)的資料結構，雖然你可以使用任何物件當作Key，但是通常我們使用Symbol當作Key。</p> <div class="language- extra-class"><pre class="language-text"><code>

config = { foo: 123, bar: 456 } # 等同於 { :foo =&gt; 123, :bar =&gt; 456 }

# each
config = { :foo =&gt; 123, :bar =&gt; 456 }
config.each do |key, value|
  puts &quot;#{key} is #{value}&quot;
end
</code></pre></div><h2 id="流程控制"><a href="#流程控制" aria-hidden="true" class="header-anchor">#</a> 流程控制</h2> <ul><li>比较</li></ul> <div class="language- extra-class"><pre class="language-text"><code>

puts 1 &gt; 2 # 大於
puts 1 &lt; 2 # 小於
puts 5 &gt;= 5 # 大於等於
puts 5 &lt;= 4 # 小於等於
puts 1 == 1 # 等於
puts 2 != 1 # 不等於

puts ( 2 &gt; 1 ) &amp;&amp; ( 2 &gt; 3 ) # 和
puts ( 2 &gt; 1 ) || ( 2 &gt; 3 ) # 或
</code></pre></div><ul><li>if</li></ul> <div class="language- extra-class"><pre class="language-text"><code>

total = 26000

if total &gt; 100000
  puts &quot;large account&quot;
elsif total &gt; 25000
  puts &quot;medium account&quot;
else
  puts &quot;small account&quot;
end

# 只有一行
puts &quot;greater than ten&quot; if total &gt; 10
</code></pre></div><ul><li>三元运算符</li></ul> <div class="language- extra-class"><pre class="language-text"><code>

x = 3
y = ( x &gt; 3 ) ? &quot;foo&quot; : &quot;bar&quot;
</code></pre></div><ul><li>Case</li></ul> <div class="language- extra-class"><pre class="language-text"><code>

case name
  when &quot;John&quot;
    puts &quot;Howdy John!&quot;
  when &quot;Ryan&quot;
    puts &quot;Whatz up Ryan!&quot;
  else
    puts &quot;Hi #{name}!&quot;
end
</code></pre></div><ul><li><p>while, loop, until, next and break</p></li> <li><p>正则</p></li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 抓出手機號碼
phone = &quot;123-456-7890&quot;
if phone =~ /(\d{3})-(\d{3})-(\d{4})/
  ext  = $1
  city = $2
  num  = $3
end
</code></pre></div><ul><li>函数</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# 方法中的return是可以省略的，Ruby就會回傳最後一行運算的值
def say_hello(name)
  &quot;Hi, &quot; + name
end

puts say_hello('ihower')
# 輸出 Hi, ihower

# 呼叫方法時，括號也是可以省略的
say_hello 'ihower'
</code></pre></div><ul><li>?與!的慣例</li></ul> <p>方法名稱可以用?或!結尾，前者表示會回傳Boolean值</p> <h2 id="对象导向"><a href="#对象导向" aria-hidden="true" class="header-anchor">#</a> 对象导向</h2> <p>Ruby的類別其實也是一種常數，所以也是大寫開頭，使用new方法可以建立出物件</p> <ul><li>自定义类</li></ul> <div class="language- extra-class"><pre class="language-text"><code>

class Person # 大寫開頭的常數

  def initialize(name) # 建構式
    @name = name # 物件變數
  end

  def say(word)
    puts &quot;#{word}, #{@name}&quot; # 字串相加
  end

end

p1 = Person.new(&quot;ihower&quot;)
p2 = Person.new(&quot;ihover&quot;)

p1.say(&quot;Hello&quot;) # 輸出 Hello, ihower
p2.say(&quot;Hello&quot;) # 輸出 Hello, ihover
</code></pre></div><ul><li>定义类的方法和变量</li></ul> <div class="language- extra-class"><pre class="language-text"><code>

class Person

  @@name = “ihower” # 類別變數

  def self.say # 類別方法
    puts @@name
  end

end

Person.say # 輸出 ihower
</code></pre></div><ul><li>资料变量</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
所有的物件變數(@開頭)、類別變數(@@開頭)，都是封裝在類別內部的，類別外無法存取：


class Person
  def initialize(name)
    @name = name
  end
end

p = Person.new('ihower')
p.name                      # 出現 NoMethodError 錯誤
p.name = 'peny'             # 出現 NoMethodError 錯誤
</code></pre></div><ul><li>可通过定义方法，读取内部变量</li></ul> <div class="language- extra-class"><pre class="language-text"><code>
# attr_accessor、attr_writer、attr_reader類別方法可以直接定義這些方法。


class Person
  attr_accessor :name

  def initialize(name)
    @name = name
  end
end

p = Person.new('ihower')
</code></pre></div><p>跟其他程式語言不太一樣，Ruby的類別層級內也可以執行程式</p> <div class="language- extra-class"><pre class="language-text"><code>

class Demo
  puts &quot;foobar&quot;
end

# 當你載入這個類別的時候，就會執行puts &quot;foobar&quot;輸出foobar
</code></pre></div><h2 id="方法的封装"><a href="#方法的封装" aria-hidden="true" class="header-anchor">#</a> 方法的封装</h2> <p>類別中的方法預設是public的，宣告private或protected的話，該行以下的方法就會套用：</p> <p>class MyClass</p> <p>def public_method
end</p> <p>private</p> <p>def private_method_1
end</p> <p>def private_method_2
end</p> <p>protected</p> <p>def protected_method
end</p> <p>end
兩著差別在於private只有在物件內部才能呼叫，預設的接收者(receiver)就是物件本身，也就是self。而protected方法除了可以在本身內部呼叫以外，還可以被子類別的物件、或是另一個相同類別的物件呼叫。</p> <div class="language- extra-class"><pre class="language-text"><code>
object.call_method的意思是object收到執行call_method的指令，

你甚至可以改寫成object.__send__(:call_method)

</code></pre></div><h2 id="class-继承"><a href="#class-继承" aria-hidden="true" class="header-anchor">#</a> Class 继承</h2> <p>Ruby使用小於&lt;符號代表類別繼承：</p> <p>class Pet
attr_accessor :name, :age</p> <p>def say(word)
puts &quot;Say: #{word}&quot;
end
end</p> <p>class Cat &lt; Pet
def say(word)
puts &quot;Meow~&quot;
super
end
end</p> <p>class Dog &lt; Pet
def say(word, person)
puts &quot;Bark at #{person}!&quot;
super(word)
end
end</p> <p>Cat.new.say(&quot;Hi&quot;)
Dog.new.say(&quot;Hi&quot;, &quot;ihower&quot;)
輸出</p> <p>Meow~
Say: Hi
Bark at ihower!
Say: Hi
這個範例中，Cat和Dog子類別覆寫了Pet say方法，其中的super是用來呼叫被覆寫掉的Pet say方法。另外，沒有括號的super和有括號的super()是有差異的，前者Ruby會自動將所有參數都代進去來呼叫父類別的方法，後者則是自己指定參數。此例中如果Dog say裡只寫super，則會發生wrong number of arguments的錯誤，這是因為Ruby會傳say(&quot;Hi&quot;, &quot;ihower&quot;)給Pet say而發生錯誤。</p> <h2 id="module"><a href="#module" aria-hidden="true" class="header-anchor">#</a> Module</h2> <p>它跟Class類別非常相似，你可以在裡面定義方法。只是你不能用new來建立它。</p> <div class="language- extra-class"><pre class="language-text"><code>

module MyUtil

  def self.foobar
    puts &quot;foobar&quot;
  end

end

MyUtil.foobar
# 輸出 foobar
</code></pre></div><p>首先是debug.rb</p> <div class="language- extra-class"><pre class="language-text"><code>
module Debug
  def who_am_i?
    puts &quot;#{self.class.name}: #{self.inspect}&quot;
  end
end
</code></pre></div><p>然後是foobar.rb</p> <div class="language- extra-class"><pre class="language-text"><code>
require &quot;./debug&quot;
class Foo
  include Debug # 這個動作叫做 Mixin
end

class Bar
  include Debug
end

f = Foo.new
b = Bar.new
f.who_am_i? # 輸出 Foo: #&lt;Foo:0x00000102829170&gt;
b.who_am_i? # 輸出 Bar: #&lt;Bar:0x00000102825b88&gt;
</code></pre></div><p>Ruby使用Module來解決多重繼承的問題，</p> <h2 id="iterator-迭代器"><a href="#iterator-迭代器" aria-hidden="true" class="header-anchor">#</a> Iterator 迭代器</h2> <p>例如each是一個陣列的方法，它會走訪其中的元素，其中的do ... end是each方法的參數，稱作Code Block，是一個匿名函式(anonymous function)</p> <div class="language- extra-class"><pre class="language-text"><code>
languages = ['Ruby', 'Javascript', 'Perl']
languages.each do |lang|
  puts &quot;I love #{lang}!&quot;
end
# I Love Ruby!
# I Love Javascript!
# I Love Perl!
</code></pre></div><div class="language- extra-class"><pre class="language-text"><code># 反覆三次
3.times do
  puts 'Good Job!'
end
# Good Job!
# Good Job!
# Good Job!

# 從一數到九
1.upto(9) do |x|
  puts x
end

# 多一個索引區塊變數
languages = ['Ruby', 'Javascript', 'Perl']
languages.each_with_index do |lang, i|
    puts &quot;#{i}, I love #{lang}!&quot;
end
# 0, I Love Ruby!
# 1, I Love Javascript!
# 2, I Love Perl!
</code></pre></div><p>(Code block)的形式除了do ... end，也可以改用大括號。通常單行會會用大括號，多行會用do ... end的形式。</p> <div class="language- extra-class"><pre class="language-text"><code>3.times { puts &quot;Hello&quot; }
</code></pre></div><div class="language- extra-class"><pre class="language-text"><code># 迭代並造出另一個陣列
a = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;]
b = a.map {|x| x + &quot;!&quot; }
puts b.inspect

# 結果是 [&quot;a!&quot;, &quot;b!&quot;, &quot;c!&quot;, &quot;d!&quot;]

# 找出符合條件的值
b = [1, 2, 3].find_all{ |x| x % 2 == 0 }
b.inspect
# 結果是 [2]

# 迭代並根據條件刪除
a = [51, 101, 256]
a.delete_if {|x| x &gt;= 100 }
# 結果是 [51]

# 客製化排序
[2, 1, 3].sort! { |a, b| b &lt;=&gt; a }
# 結果是 [3, 2, 1]

# 計算總和
(5..10).inject {|sum, n| sum + n }
# 結果是 45

# 找出最長字串find the longest word
longest = [&quot;cat&quot;, &quot;sheep&quot;, &quot;bear&quot;].inject do |memo, word|
  ( memo.length &gt; word.length ) ? memo : word
end
# 結果是 &quot;sheep&quot;
</code></pre></div><h2 id="yield"><a href="#yield" aria-hidden="true" class="header-anchor">#</a> Yield</h2> <p>在方法中使用yield可以執行Code block參數：</p> <div class="language- extra-class"><pre class="language-text"><code># 定義方法
def call_block
  puts &quot;Start&quot;
  yield
  yield
  puts &quot;End&quot;
end

call_block { puts &quot;Blocks are cool!&quot; }
# 輸出
# &quot;Start&quot;
# &quot;Blocks are cool!&quot;
# &quot;Blocks are cool!&quot;
# &quot;End&quot;
</code></pre></div><h2 id="例外处理"><a href="#例外处理" aria-hidden="true" class="header-anchor">#</a> 例外处理</h2> <div class="language- extra-class"><pre class="language-text"><code>begin
  puts 10 / 0 # 這會丟出 ZeroDivisionError 的例外錯誤
rescue =&gt; e
  puts e.class # 如果發生例外會執行 rescue 這一段
ensure
  # 無論有沒有發生例外，ensure 這一段都一定會執行
end
# 輸出 ZeroDivisionError
</code></pre></div><div class="language- extra-class"><pre class="language-text"><code>raise &quot;Not works!!&quot;
# 丟出一個 RuntimeError

# 自行自定例外物件
class MyException &lt; RuntimeError
end

raise MyException
</code></pre></div><h2 id="introspection-反射机制"><a href="#introspection-反射机制" aria-hidden="true" class="header-anchor">#</a> Introspection 反射机制</h2> <div class="language- extra-class"><pre class="language-text"><code># 這個物件有什麼方法
Object.methods
=&gt; [&quot;send&quot;, &quot;name&quot;, &quot;class_eval&quot;, &quot;object_id&quot;, &quot;new&quot;, &quot;singleton_methods&quot;, ...]

# 這個物件有這個方法嗎？
Object.respond_to? :name
=&gt; true
</code></pre></div><h2 id="常见惯例"><a href="#常见惯例" aria-hidden="true" class="header-anchor">#</a> 常见惯例</h2> <div class="language- extra-class"><pre class="language-text"><code>result ||= a
</code></pre></div><p>如果result是nil或false的話，將a指派給result，如果不是的話，什麼都不做。以上這段程式等同於</p></div> <footer class="page-edit"><!----> <div class="last-updated"><span class="prefix">Last Updated: </span> <span class="time">9/12/2019, 2:40:21 AM</span></div></footer> <!----> </main></div><div class="global-ui"></div></div>
    <script src="/assets/js/app.29852e53.js" defer></script><script src="/assets/js/2.8d5777ed.js" defer></script><script src="/assets/js/146.23a2efcc.js" defer></script>
  </body>
</html>
