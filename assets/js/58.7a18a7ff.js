(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{222:function(t,e,r){"use strict";r.r(e);var n=r(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"开发环境配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开发环境配置","aria-hidden":"true"}},[t._v("#")]),t._v(" 开发环境配置")]),t._v(" "),r("h2",{attrs:{id:"gitattributes-文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gitattributes-文件","aria-hidden":"true"}},[t._v("#")]),t._v(" "),r("code",[t._v(".gitattributes")]),t._v(" 文件")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("# Automatically normalize line endings for all text-based files\n# http://git-scm.com/docs/gitattributes#_end_of_line_conversion\n* text=auto\n\n# For the following file types, normalize line endings to LF on\n# checkin and prevent conversion to CRLF when they are checked out\n# (this is required in order to prevent newline related issues like,\n# for example, after the build script is run)\n*.css   text eol=lf\n*.html  text eol=lf\n*.jade  text eol=lf\n*.js    text eol=lf\n*.json  text eol=lf\n*.less  text eol=lf\n*.scss  text eol=lf\n*.md    text eol=lf\n*.sh    text eol=lf\n*.txt   text eol=lf\n*.xml   text eol=lf\n")])])]),r("h2",{attrs:{id:"prettier"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#prettier","aria-hidden":"true"}},[t._v("#")]),t._v(" prettier")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("prettier"),r("OutboundLink")],1),t._v(" 代码格式化工具")])])}),[],!1,null,null,null);e.default=s.exports}}]);