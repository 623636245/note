(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{239:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"用helper瘦身"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用helper瘦身","aria-hidden":"true"}},[e._v("#")]),e._v(" 用Helper瘦身")]),e._v(" "),a("h2",{attrs:{id:"可以看做是一个外联的js文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可以看做是一个外联的js文件","aria-hidden":"true"}},[e._v("#")]),e._v(" 可以看做是一个外联的JS文件")]),e._v(" "),a("ol",[a("li",[e._v("在 "),a("code",[e._v("app/helpers")]),e._v(" 中添加需要的文件，命令可与表名相关如：issues_helper.rb")]),e._v(" "),a("li",[e._v("文件中结构如下，注意驼峰结构")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('module IssuesHelper\n def test\n   res = Issue.where(:id => 2)\n   # res 为 Array\n   res2 = res.as_json[0]\n   # res2 为 Hash\n   res["R"] = "Ruby"\n   return res2 \n end\nend\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("引用时，在 "),a("code",[e._v("Controller")]),e._v(" 中的 "),a("code",[e._v("Class")]),e._v(" 上，引用 "),a("code",[e._v("include IssuesHelper")])]),e._v(" "),a("li",[e._v("可传参数")])]),e._v(" "),a("h2",{attrs:{id:"help-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#help-method","aria-hidden":"true"}},[e._v("#")]),e._v(" help_method")]),e._v(" "),a("p",[e._v("什么是 helper_method？ 如果将方法设置为 helper_method，那就意味着该方法既可以在 controller 中使用，也可以在 view 中使用，这样会 大大提高编码效率，减少视图层的重复代码，使代码更加清晰。")]),e._v(" "),a("h2",{attrs:{id:"notice使用方法-ctroller里"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notice使用方法-ctroller里","aria-hidden":"true"}},[e._v("#")]),e._v(" notice使用方法 Ctroller里")]),e._v(" "),a("ol",[a("li",[e._v("application.js里")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//= require bootstrap/alert\n//= require_tree .\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[e._v("application_helper.rb中插入")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(' def notice_message\n   alert_types = { notice: :success, alert: :danger }\n   close_button_options = { class: "close", "data-dismiss" => "alert", "aria-hidden" => true }\n   close_button = content_tag(:button, "x", close_button_options)\n   alerts = flash.map do |type, message|\n     alert_content = close_button + message\n     alert_type = alert_types[type.to_sym] || type\n     alert_class = "alert alert-#{alert_type} alert-dismissable"\n     content_tag(:div, alert_content, class: alert_class)\n   end\n   alerts.join("\\n").html_safe\n end\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[e._v("application.html.erb中")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" <%= notice_message %>\n   <%= yield %>\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[e._v("控制器中")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('redirect_to groups_path, alert: "讨论版已删除"\n   # flash[:notice] = "早安！你好！"\n   # flash[:alert] = "晚安，该睡觉啦！"\n   # flash[:warning] = "warning!"\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);